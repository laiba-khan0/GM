/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GM;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author LENOVO
 */
public class Customer extends javax.swing.JFrame {

    /**
     * Creates new form Customer
     */
    public Customer() {
        initComponents();
        fillTable();
        addTableClickListener();
    }
    
    
     private void addTableClickListener() {
        jTable1.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
          
            public void valueChanged(ListSelectionEvent event) {
                if (!event.getValueIsAdjusting()) {
                    int selectedRow = jTable1.getSelectedRow();
                    if (selectedRow != -1) {
                        String CustName = jTable1.getValueAt(selectedRow, 0).toString();
                        String Custid = jTable1.getValueAt(selectedRow, 1).toString();
                        String Custphone = jTable1.getValueAt(selectedRow, 2).toString();
                        

                        // Set values to text fields
                        cusName.setText(CustName);
                        cusID.setText(Custid);
                        cusPhone.setText(Custphone);
                    }
                }
            }
        });
    }
    
    private void fillTable() {
        DefaultTableModel model1 = (DefaultTableModel) jTable1.getModel();
        model1.setRowCount(0); // Clear existing rows

        try (Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/gms", "root", "root");
             PreparedStatement pstmt = conn.prepareStatement("SELECT Customername, Customerid, Customerphone FROM customer");
             ResultSet rs = pstmt.executeQuery()) {

            while (rs.next()) {
                String Custname = rs.getString("Customername");
                String Custid = rs.getString("Customerid");
                String Custphone = rs.getString("Customerphone");
                model1.addRow(new Object[]{Custname, Custid, Custphone});
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Database error: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cusName = new javax.swing.JTextField();
        cusID = new javax.swing.JTextField();
        cusPhone = new javax.swing.JTextField();
        ADD = new javax.swing.JButton();
        EDIT = new javax.swing.JButton();
        DELE = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        bacbutton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));

        jLabel4.setFont(new java.awt.Font("Showcard Gothic", 0, 36)); // NOI18N
        jLabel4.setText("Customer");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(193, 193, 193))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(57, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addGap(27, 27, 27))
        );

        jLabel1.setFont(new java.awt.Font("Showcard Gothic", 0, 14)); // NOI18N
        jLabel1.setText("Customer Name");

        jLabel2.setFont(new java.awt.Font("Showcard Gothic", 0, 14)); // NOI18N
        jLabel2.setText("Customer ID");

        jLabel3.setFont(new java.awt.Font("Showcard Gothic", 0, 14)); // NOI18N
        jLabel3.setText("Phone");

        cusPhone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cusPhoneActionPerformed(evt);
            }
        });

        ADD.setBackground(new java.awt.Color(204, 204, 204));
        ADD.setFont(new java.awt.Font("Showcard Gothic", 0, 14)); // NOI18N
        ADD.setText("Add");
        ADD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ADDActionPerformed(evt);
            }
        });

        EDIT.setBackground(new java.awt.Color(204, 204, 204));
        EDIT.setFont(new java.awt.Font("Showcard Gothic", 0, 14)); // NOI18N
        EDIT.setText("Update");
        EDIT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EDITActionPerformed(evt);
            }
        });

        DELE.setBackground(new java.awt.Color(204, 204, 204));
        DELE.setFont(new java.awt.Font("Showcard Gothic", 0, 14)); // NOI18N
        DELE.setText("Delete");
        DELE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DELEActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Customer Name", "Customer ID", "Phone No# "
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        bacbutton.setFont(new java.awt.Font("Showcard Gothic", 0, 12)); // NOI18N
        bacbutton.setText("Back");
        bacbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bacbuttonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(175, 175, 175)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cusPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(ADD)
                                .addGap(18, 18, 18)
                                .addComponent(EDIT))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cusName, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel2)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(DELE)
                            .addComponent(cusID, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(77, Short.MAX_VALUE))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(bacbutton)
                .addGap(19, 19, 19))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bacbutton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(cusName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cusID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cusPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ADD, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(EDIT)
                        .addComponent(DELE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void ADDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ADDActionPerformed
        // TODO add your handling code here:
    String Custname = cusName.getText();
    String Custid = cusID.getText();
    String Custphone = cusPhone.getText();
   

    if (Custname.isEmpty() || Custid.isEmpty() || Custphone.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Please fill out all fields");
        return;
    }
        
        Connection conn = null;
        PreparedStatement pstmt = null;
        
    try {
        
        conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/gms", "root", "root");
        String query = "INSERT INTO customer (Customername, Customerid, Customerphone) VALUES (?, ?, ?)";
        pstmt = conn.prepareStatement(query);
            pstmt.setString(1, Custname);
            pstmt.setString(2, Custid);
            pstmt.setString(3, Custphone);

            int rowsInserted = pstmt.executeUpdate();
            
        if (rowsInserted > 0) 
        { 
        JOptionPane.showMessageDialog(this, " added successfully");
        DefaultTableModel model1 = (DefaultTableModel) jTable1.getModel();
        model1.addRow(new Object[]{Custname, Custid, Custphone});
        
        cusName.setText("");
        cusID.setText("");
        cusPhone.setText("");
              }      
        else
        {
        JOptionPane.showMessageDialog(null, "fill all the Data");
        }
    } catch (SQLException ex) {
        ex.printStackTrace();
        JOptionPane.showMessageDialog(this, "Database error: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }   
     
    }//GEN-LAST:event_ADDActionPerformed

    private void bacbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bacbuttonActionPerformed
        // TODO add your handling code here:
         this.toBack();
        Dashboard dashboard = new Dashboard();
        dashboard.setVisible(true);
        dashboard.toFront();
    }//GEN-LAST:event_bacbuttonActionPerformed

    private void cusPhoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cusPhoneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cusPhoneActionPerformed

    private void EDITActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EDITActionPerformed
        // TODO add your handling code here:
       String Custname = cusName.getText();
       String Custid = cusID.getText();
       String Custphone = cusPhone.getText();

        Connection conn = null;
        PreparedStatement pstmt = null;
        

        try {
          // Check for empty fields
            if (Custname.isEmpty() || Custid.isEmpty() || Custphone.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please fill out all fields");
            return;
         }
            
        conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/gms", "root", "root");
        String query = "UPDATE customer SET Customername = ?, Customerphone = ? WHERE Customerid = ?";
        pstmt = conn.prepareStatement(query);
            pstmt.setString(1, Custname);
            pstmt.setString(2, Custphone);
            pstmt.setString(3, Custid);
            
            
          int rowsUpdated = pstmt.executeUpdate();
          if (rowsUpdated == 1) {
            JOptionPane.showMessageDialog(this, "Update Successfully");
            
            fillTable();
            
        cusName.setText("");
        cusPhone.setText("");
        cusID.setText("");
           
          }
          else {
            JOptionPane.showMessageDialog(this, "Update failed. ");
          }
        }
         catch (SQLException ex) {
          ex.printStackTrace();
          JOptionPane.showMessageDialog(this, "Database error: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        } 
        
        
    }//GEN-LAST:event_EDITActionPerformed

    private void DELEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DELEActionPerformed
        // TODO add your handling code here:
        
       String Custname = cusName.getText();
       String Custid = cusID.getText();
       String Custphone = cusPhone.getText();

       
        Connection conn = null;
        PreparedStatement pstmt = null;

        try {
          // Check for empty fields
        if (Custname.isEmpty() || Custid.isEmpty() || Custphone.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please fill out all fields");
            return;
         }

          conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/gms", "root", "root");
          String query = "DELETE FROM customer WHERE Customerid = ?";
          pstmt = conn.prepareStatement(query);
          pstmt.setString(1, Custid);


            cusName.setText("");
            cusPhone.setText("");
            cusID.setText("");
        
          int rowsUpdated = pstmt.executeUpdate();
          if (rowsUpdated > 0) {
            JOptionPane.showMessageDialog(this, "Delete  Successfully");
            fillTable();
          } else {
            JOptionPane.showMessageDialog(this, "Delete failed. ");
          }

        } catch (SQLException ex) {
          ex.printStackTrace();
          JOptionPane.showMessageDialog(this, "Database error: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        } 
    }//GEN-LAST:event_DELEActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Customer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Customer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Customer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Customer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Customer().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    javax.swing.JButton ADD;
    javax.swing.JButton DELE;
    javax.swing.JButton EDIT;
    javax.swing.JButton bacbutton;
    javax.swing.JTextField cusID;
    javax.swing.JTextField cusName;
    javax.swing.JTextField cusPhone;
    javax.swing.JLabel jLabel1;
    javax.swing.JLabel jLabel2;
    javax.swing.JLabel jLabel3;
    javax.swing.JLabel jLabel4;
    javax.swing.JPanel jPanel1;
    javax.swing.JScrollPane jScrollPane1;
    javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
